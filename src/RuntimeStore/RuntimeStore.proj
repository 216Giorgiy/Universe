<Project>
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" />

  <PropertyGroup>
    <Configurations>Debug;Release</Configurations>

    <!-- Platforms are determined by host OS because crossgen does not support cross-platform native optimization -->
    <Platforms Condition="$([MSBuild]::IsOSPlatform('Windows'))">win-x64;win-x86</Platforms>
    <Platforms Condition="$([MSBuild]::IsOSPlatform('Linux'))">linux-x64</Platforms>
    <Platforms Condition="$([MSBuild]::IsOSPlatform('OSX'))">osx-x64</Platforms>

    <!-- Map platform to the RID we have to used to build the runtime store -->
    <RuntimeIdentifier Condition="'$(Platform)' == 'win-x64'">win7-x64</RuntimeIdentifier>
    <RuntimeIdentifier Condition="'$(Platform)' == 'win-x86'">win7-x86</RuntimeIdentifier>
    <RuntimeIdentifier>$(Platform)</RuntimeIdentifier>

    <RuntimeStorePackageId>Microsoft.AspNetCore.All</RuntimeStorePackageId>
    <RuntimeStoreTargetFramework>netcoreapp2.0</RuntimeStoreTargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <ExistingStoreManifests Include="..\Metapackage\build\aspnetcore-store-*.xml" />
    <HostingStartupPackageReference Include="Microsoft.AspNetCore.ApplicationInsights.HostingStartup" />
    <HostingStartupPackageReference Include="Microsoft.AspNetCore.AzureAppServices.HostingStartup" />
    <!-- Trim packages guaranteed to be in the runtime but isn't included in our runtime store -->
    <PackagesToTrim Include="runtime.win-arm64.runtime.native.system.data.sqlclient.sni" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Partners\Mirror.proj" />
    <ProjectReference Include="..\Framework\*.repoproj" />
  </ItemGroup>

  <Import Project="$(MSBuildToolsPath)\Microsoft.Common.targets" />
  <Import Project="RuntimeStore.targets" />
</Project>

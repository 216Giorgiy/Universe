<Project>

  <Import Project="$([System.IO.Path]::GetDirectoryName($(KoreBuildProjectFullPath)))\modules\KoreBuild.Tasks\module.props" />

  <PropertyGroup>
    <!-- target chain  -->
    <CoreBuildDependsOn>
      ResolveReferences;
      Compile;
    </CoreBuildDependsOn>

    <ResolveReferencesDependsOn>
      BeforeResolveReferences;
      AssignProjectConfiguration;
      ResolveProjectReferences;
      FindInvalidProjectReferences;
      ResolveArtifactReferences;
      AfterResolveReferences
    </ResolveReferencesDependsOn>

    <CompileDependsOn>
      ResolveReferences;
      CoreCompile;
    </CompileDependsOn>

    <GetTargetPathDependsOn>
      ResolveArtifacts;
    </GetTargetPathDependsOn>

    <!-- Computed props -->
    <RuntimeStoreArch>$(RuntimeIdentifier.LastIndexOf('-'))</RuntimeStoreArch>
    <RuntimeStoreArch>$([MSBuild]::Add(1, $(RuntimeStoreArch)))</RuntimeStoreArch>
    <RuntimeStoreArch>$(RuntimeIdentifier.Substring($(RuntimeStoreArch)))</RuntimeStoreArch>

    <!-- file paths -->
    <GeneratedPackageVersionPropsPath>$(IntermediateOutputPath)dependencies.g.props</GeneratedPackageVersionPropsPath>
    <GeneratedRestoreSourcePropsPath>$(IntermediateOutputPath)sources.g.props</GeneratedRestoreSourcePropsPath>

    <TargetPath>$(OutputPath)aspnetcore-store-$(PackageVersion)-$(RuntimeIdentifier).zip</TargetPath>
    <TargetSymbolsPath>$(OutputPath)aspnetcore-symbols-$(PackageVersion)-$(RuntimeIdentifier).zip</TargetSymbolsPath>
  </PropertyGroup>

  <Target Name="ResolveArtifacts">
    <ItemGroup>
      <Artifact Include="$(TargetPath)">
        <ArtifactType>ZipArchive</ArtifactType>
        <Id>aspnetcore-store</Id>
        <RuntimeIdentifier>$(RuntimeIdentifier)</RuntimeIdentifier>
        <Version>$(PackageVersion)</Version>
        <Arch>$(RuntimeArch)</Arch>
      </Artifact>
      <Artifact Include="$(TargetSymbolsPath)">
        <ArtifactType>ZipArchive</ArtifactType>
        <Id>aspnetcore-symbols</Id>
        <RuntimeIdentifier>$(RuntimeIdentifier)</RuntimeIdentifier>
        <Version>$(PackageVersion)</Version>
        <Arch>$(RuntimeArch)</Arch>
      </Artifact>
    </ItemGroup>
  </Target>

  <Target Name="CoreCompile" DependsOnTargets="GenerateRSReferencesPackage;BuildRuntimeStore;PackRuntimeStore">
    <Message Text="%(ArtifactReference.Identity)" Importance="high" />
  </Target>

<!--
Generates an intermediate package because we want to generate the runtime store using the closure of Microsoft.AspNetCore.All.
not the closure of each package referenced by Microsoft.AspNetCore.All (the default behavior of ComposeStore.)
-->
  <Target Name="GenerateRSReferencesPackage" DependsOnTargets="ResolveReferences">
    <!-- Clear working directory -->
    <RemoveDir Directories="$(IntermediateOutputPath);$(RestorePackagesPath)\RS.References\$(PackageVersion)\" />

    <ItemGroup>
      <RSPackageReference Include="%(ArtifactReference.PackageId)" Condition=" '%(ArtifactReference.ArtifactType)' == 'NuGetPackage' ">
        <Version>%(ArtifactReference.Version)</Version>
        <TargetFramework>$(RuntimeStoreTargetFramework)</TargetFramework>
      </RSPackageReference>
      <!-- TODO update artifacts.props -->
      <RSPackageReference Remove="%(PackageArtifact.Identity)" Condition="'%(PackageArtifact.RuntimeStore)' != 'true'" />

      <RSPackageSources Include="%(ArtifactReference.RootDir)%(ArtifactReference.Directory)" Condition=" '%(ArtifactReference.ArtifactType)' == 'NuGetPackage' " />
      <RSPackageSources Include="$(IntermediateOutputPath)" />
    </ItemGroup>

    <PackNuspec NuspecPath="$(MSBuildThisFileDirectory)RS.References.nuspec"
      Dependencies="@(RSPackageReference);@(ExternalDependency->WithMetadataValue('RuntimeStore', 'true'))"
      Properties="version=$(PackageVersion)"
      Overwrite="true"
      DestinationFolder="$(IntermediateOutputPath)" />
  </Target>

  <Target Name="BuildRuntimeStore" DependsOnTargets="GenerateRSReferencesPackage">
    <PropertyGroup>
      <ComposeIntermediateOutputPath>$(IntermediateOutputPath)s\</ComposeIntermediateOutputPath>
      <_ComposeStoreProps />
      <_ComposeStoreProps>$(_ComposeStoreProps);$(_RsManifestProps)</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);RestoreNoCache=true;</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);RestoreForce=true;</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);DotNetRestoreSources=@(RSPackageSources);</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);ComposeDir=$(ComposeIntermediateOutputPath)</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);ComposeWorkingDir=$(IntermediateOutputPath)rw\</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);RuntimeIdentifier=$(RuntimeIdentifier)</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);RuntimeFrameworkVersion=$(MicrosoftNETCoreApp20PackageVersion)</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);PackageVersion=$(PackageVersion);</_ComposeStoreProps>
      <_ComposeStoreProps>$(_ComposeStoreProps);TargetFramework=$(RuntimeStoreTargetFramework);</_ComposeStoreProps>
    </PropertyGroup>

    <!-- Build runtime store -->
    <MSBuild Projects="RS.Manifest\RS.Manifest.csproj"
             Targets="ComposeStore"
             Properties="$(_ComposeStoreProps)" />
  </Target>

  <Target Name="PackRuntimeStore">
    <PropertyGroup>
      <IntermediateRuntimeStoreManifest>$(ComposeIntermediateOutputPath)$(RuntimeStoreArch)\$(RuntimeStoreTargetFramework)\artifact.xml</IntermediateRuntimeStoreManifest>
    </PropertyGroup>

    <ItemGroup>
      <RuntimeStoreFiles Include="$(ComposeIntermediateOutputPath)$(RuntimeStoreArch)\**\*" Exclude="$(IntermediateRuntimeStoreManifest)" />
      <RuntimeStoreSymbolFiles Include="$(_RuntimeStoreOutputDirectory)symbols\**\*" />
      <DepsFiles Include="$(_DepsOutputDirectory)**\*" />
      <ExistingStoreManifests Include="$(_ExistingManifestsDirectory)*.xml" />
    </ItemGroup>

    <!-- Compose new store and symbols -->
    <RepoTasks.ComposeNewStore
      ExistingManifests="@(ExistingStoreManifests)"
      NewManifests="$(IntermediateRuntimeStoreManifest)"
      RuntimeStoreFiles="@(RuntimeStoreFiles)"
      RuntimeStoreSymbolFiles="@(RuntimeStoreSymbolFiles)"
      ManifestDestination="$(ArtifactsDir)aspnetcore-store-$(PackageVersion)-$(RuntimeIdentifier).xml"
      StoreDestination="$(_StoreZipDirectory)store\"
      SymbolsDestination="$(_SymbolsZipDirectory)"/>

    <!-- Insert deps files -->
    <Copy SourceFiles="@(DepsFiles)" DestinationFolder="$(_StoreZipDirectory)additionalDeps\%(RecursiveDir)" />

    <ItemGroup>
      <OutputZipFiles Include="$(_StoreZipDirectory)**\*" />
      <OutputSymbolZipFiles Include="$(_SymbolsZipDirectory)**\*" />
    </ItemGroup>

    <!-- Create zips -->
    <ZipArchive File="$(OutputZip)" SourceFiles="@(OutputZipFiles)" WorkingDirectory="$(_StoreZipDirectory)" Overwrite="true"/>
    <ZipArchive File="$(OutputSymbolZip)" SourceFiles="@(OutputSymbolZipFiles)" WorkingDirectory="$(_SymbolsZipDirectory)" Overwrite="true" Condition="'@(OutputSymbolZipFiles)' != ''"/>
  </Target>


  <!-- OLD -->

  <PropertyGroup>
    <_TemplatesDirectory>$(MSBuildThisFileDirectory)tools\templates\</_TemplatesDirectory>
    <_SrcDirectory>$(RepositoryRoot)src\</_SrcDirectory>
    <_AllMetapackageDirectory>$(_SrcDirectory)Microsoft.AspNetCore.All\</_AllMetapackageDirectory>
    <_ExistingManifestsDirectory>$(_AllMetapackageDirectory)build\</_ExistingManifestsDirectory>
    <_ArtifactsZipDirectory>$(ArtifactsDir)zip\</_ArtifactsZipDirectory>
    <_StoreZipDirectory>$(_ArtifactsZipDirectory)rs\</_StoreZipDirectory>
    <_SymbolsZipDirectory>$(_ArtifactsZipDirectory)symbols\</_SymbolsZipDirectory>
    <_DepsOutputDirectory>$(ArtifactsDir)deps\</_DepsOutputDirectory>
  </PropertyGroup>

</Project>
